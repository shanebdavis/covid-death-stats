import &ArtStandardLib

{}
  nullCheck = (obj, f) ->
    if find v in obj when !v? with true
      null
    else if f is Function
      f obj
    else f

  humanLabel = (p) ->
    if m = p?.match /(^\d+-\d+) years/i
      "#{m[1]} Years"
    else if m = p?.match /^(\d\d\d\d)-(\d\d)$/
      [_, year, month] = m
      "" #{months[month|0]}, #{year}
    else
      upperCamelCase p, ' '
      .replace /(\d+$)/, " $1"

  maxDisplayValue = 999999999
  isInfinite = (v) -> !(v < maxDisplayValue)

  months = :_ :Jan :Feb :Mar :Apr :May :Jun :Jul :Aug :Sep :Oct :Nov :Dec

  formatNumber = (p) ->
    if isInfinite p
      :Infinity
    else
      switch
      when p >= 99999999 then "#{Math.round(p / 1000000)}m"
      when p >= 999999 then "#{(p / 1000000).toFixed 1}m"
      when p >= 99999 then "#{Math.round(p / 1000)}k"
      when p >= 9999 then "#{(p / 1000).toFixed 1}k"
      when p >= 999 then commaize Math.round p
      when p >= 100 then Math.round p
      when float32Eq (p | 0), p then p | 0
      when p >= 10 then p.toFixed 1
      else p.toFixed 2

  formatProbability = (p) ->
    if p < .001001
      "1:#{formatNumber 1/p}"
    else
      100 * p
      .toFixed
        switch
        when p < .010001 then 3
        when p < .100001 then 2
        else 1
      + :%

  maxValues =
    compactFlatten
      array s from -7 til 12
        array m in 1 2.5 5
          m * Math.pow 10, s
