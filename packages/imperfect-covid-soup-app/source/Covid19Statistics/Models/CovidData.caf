import &ArtSuite

class CovidData extends ApplicationState
  @stateFields
    covidData: undefined
    mechanismData: undefined
    intentData: undefined
    regions: undefined
    updatedAt: undefined
    times: undefined
    ages: undefined

  ageFilter =
    ///
      ^
      (
        All |
        Under |
        1-4 |
        \d*5- |
        85
      )
  getInitialState: ->
    covidData = null
    merge
      object d0, field from &covid-death-stats.getPreparedData()
        if field == :covidData
          covidData = object d1, region from d0
            list = object d2, time from d1
              object _, age from d2 when ageFilter.test age

            last12MonthSet =
              array d2, time from d1 when /^\d\d\d\d-\d\d/.test time
                [] time, d2
              .sort (a, b) -> a[0].localeCompare b[0]

            l12m = list.last12Months = {}
            array [_, ages] from last12MonthSet.slice last12MonthSet.length - 13, last12MonthSet.length - 1
              each stats, age in ages
                l12mSum = l12m[age] ?= {}
                each v, stat in stats
                  l12mSum[stat] = if stat == :population then v else (l12mSum[stat] ? 0) + v

            list

        else d0
      regions:  Object.keys covidData
      times:
        compactFlatten []
          "All Time"
          arrayWithoutValue
            Object.keys covidData.UnitedStates
            "All Time"

      ages:     Object.keys covidData.UnitedStates["2020"]
