import &StandardImport, &Widgets, &PagePart, &Partials

class Graph extends ViewStateComponent

  @subscriptions
    :covidData
    :graphState

  @stateFields
    selectedData: null
    previousMaxValue: null
    manualMode: false

  @propFields :animationOn

  preprocessState: (newState) ->
    merge
      newState
      selectedData: getSelectedData {} newState.covidData, newState.graphState

  @getter
    graphType: -> @graphState.graphType[0]
    unit:      -> !@isPhone && !@graphState.custom && @graphState.presetData?.graphState?.unit
    inColor:   -> @graphState.inColor
    data: ->
      array rows, label in @selectedData
        getGraphDataElement rows, label, @graphState
    graphProps: -> {}
      @data
      @inColor
      @graphState.inColor
      @unit
      @graphType

  invertEquation: ->
    models.graphState.setState
      numerator: @graphState.denominator
      denominator: @graphState.numerator

  render: ->
    log {} @covidData

    mainContent = []
      Element
        :parentWidthChildrenHeight
        # draw: :red
        TextElement
          if @isPhone then TextStyles.smallBoldText
          else TextStyles.xLargeText
          :parentWidthChildrenHeight :textCenterCenter
          padding: @gridSize / 4
          color: TextPalette.black.secondary
          text: "" Covid-19 Death Statistics (United States)

      Element
        if @phonePortraitLayout
          size: ww: 1, hw: 1
        unless @phoneLandscapeLayout
          padding: bottom: @gridSize

        if @graphType == :oneBar
          OneBarGraph @graphProps
        else
          BarGraph @graphProps

      if @isPhone
        if @phonePortraitLayout
          PhoneBottom {} @selectedData, @manualMode
      else
        PageBottom {} @selectedData

    Element
      :column

      padding:
        if @phonePortraitLayout
          {top} = @suggestedPadding
        else if @phoneLandscapeLayout
          {left, right, top, bottom} = @suggestedPadding
        else h: @gridSize
      childrenMargins:
        unless @isPhone
          @gridSize * 2

      animators:
        if @animationOn
          location:
            duration: 2
            f: :easeInQuad
            from: xw: -1 y: 0
        else {}

      if @phonePortraitLayout
        ScrollerWithBar2
          :clip
          alwaysShowBarIfNeeded: true
          key: scrollerKey = :phoneScrollElement
          childrenMargins: @gridSize
          padding:
            h: @gridSize
            bottom: @gridSize * 2
          mainContent
      else
        Element
          childrenMargins: @gridSize
          :column
          mainContent

      if @phonePortraitLayout
        Element
          :row :parentWidthChildrenHeight
          :parentWidthChildrenHeight
          :childrenCenterCenter
          padding:
            left: @gridSize / 2
            right: @gridSize / 2
            top: @gridSize / 2
            bottom: @gridSize / 2 + @suggestedPadding.bottom
          draw: #e
          childrenMargins: @gridSize / 2
          Button
            action: @toggleManualMode
            text: if @manualMode then "◀︎ return to slideshow" else "" edit graph

          @manualMode && Element()

          !@manualMode && TextElement
            TextStyles.smallText
            :parentSize
            :textCenterCenter
            text: "page #{@graphState.preset + 1} / #{&Presets.length}"

          !@manualMode && Button
            action: ->
              models.graphState.setPreset @graphState.preset - 1
              timeout 50 -> @refs.phoneScrollElement.scrollElement.scrollToTop()

            Element
              :row :childrenSize
              padding: h: @gridSize / 2
              Icon size: @reducedButtonSize, icon: :caretLeft

          !@manualMode && Button
            action: ->
              models.graphState.setPreset @graphState.preset + 1
              timeout 50 -> @refs.phoneScrollElement.scrollElement.scrollToTop()

            Element
              :row :childrenSize
              padding: h: @gridSize / 2
              Icon size: @reducedButtonSize, icon: :caretRight
