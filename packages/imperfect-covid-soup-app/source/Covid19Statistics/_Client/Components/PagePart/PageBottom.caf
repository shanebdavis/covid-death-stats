import &StandardImport

class PageBottom extends ViewStateComponent
  @subscriptions :graphState :covidData

  @stateFields showOptionsFor: null

  getOptions: (optionsType) ->
    switch optionsType
    when :graphType               then @_graphType ?= :time :age
    when :layout                  then @_layouts ?= :stacked :adjacent
    when :numerator :denominator  then @_valueFields ?= compactFlatten [] :1 @covidData.valueFields
    when :time                    then @covidData.times
    when :region                  then @covidData.regions
    when :age                     then @covidData.ages

  render: ->
    @graphState extract custom, presetData
    Element
      :row
      childrenMargins: @gridSize

      Element
        size: w: @gridSize * 10
        Legend {} @showOptionsFor, @setShowOptionsFor

      Element
        if @showOptionsFor
          GraphStatePicker
            closeAction: @clearShowOptionsFor
            label: @showOptionsFor
            items: array a in order = @getOptions @showOptionsFor
              text: humanLabel a
              selected: a in @graphState[@showOptionsFor]
              action:   (event) ->
                if event.props.shiftKey
                  models.graphState.multiSelect @showOptionsFor, a, order
                else
                  models.graphState.select @showOptionsFor, a

        else
          Element
            key: :preset
            :row
            childrenMargins: @gridSize

            Element
              :clip
              :row :childrenTopCenter

              ScrollerWithBar
                :centerCenter
                size: w: @gridSize * 48 max: ww: 1
                padding:
                  bottom: @gridSize
                  h: @gridSize
                MarkdownView
                  text:
                    if @custom
                      """
                        # Custom

                        * Explore the dataset via the legend on the left
                        * Return to the presets by clicking advancing to the next or previous page

                    else
                      presetData.description
                      .replace /(%(\w+)%)/g, (a, b, c) ->
                        array v in @graphState[c] with humanLabel v
                        .join ", "

            Element
              size: w: @gridSize * 10
              PageSelector()
